{"version":3,"sources":["App.js","utils/utils.js","index.js"],"names":["App","useState","backgroundColor","bgColorStyle","setColorStyle","className","style","onSubmit","evt","preventDefault","id","name","onChange","prevColorStyle","value","target","length","startsWith","checkInput","rRGB","slice","toString","gRGB","bRGB","console","log","notNumber","isNaN","getRGBString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAIe,SAASA,IAAO,IAAD,EACUC,mBAAS,CAC7CC,gBAAiB,qBAFS,mBACrBC,EADqB,KACPC,EADO,KAW5B,OACE,qBAAKC,UAAU,MAAMC,MAAOH,EAA5B,SACE,uBAAME,UAAU,WAAWE,SATV,SAACC,GAAD,OAASA,EAAIC,kBAS9B,UACE,uBACEJ,UAAU,YACVK,GAAG,MACHC,KAAK,MACLC,SAba,SAACJ,GACpBJ,GAAc,SAACS,GACb,OCXa,SAAC,EAAYA,GAAoB,IAC1CC,EADyC,EAA7BC,OACZD,MACR,OAAIA,EAAME,OAAS,EACVH,IAGDC,EAAMG,WAAW,MAAQH,EAAME,OAAS,IAC5C,CAAEd,gBAAiB,ODIZgB,CAAWV,EAAKK,ICAR,SAACC,GACpB,GAAIA,EAAMG,WAAW,KAAM,CACzB,IAAME,IAAS,KAAOL,EAAMM,MAAM,EAAG,IAAIC,WACnCC,IAAS,KAAOR,EAAMM,MAAM,EAAG,IAAIC,WACnCE,IAAS,KAAOT,EAAMM,MAAM,EAAG,IAAIC,WACzCG,QAAQC,IAAIN,EAAMG,EAAMC,GACxB,IAAMG,EAAYC,MAAMR,IAASQ,MAAML,IAASK,MAAMJ,GAGtD,OAFAC,QAAQC,IAAI,eAAgBC,GAGzBA,GAAa,CAAExB,gBAAiB,QAAY,CAC3CA,gBAAgB,OAAD,OAASiB,EAAT,aAAkBG,EAAlB,aAA2BC,EAA3B,ODXyBK,CAAapB,EAAIO,OAAOD,aAahE,qBAAKT,UAAU,aAAf,SACoC,QAAjCF,EAAaD,gBACV,wCACAC,EAAaD,uBEtB3B2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.407dc270.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport { checkInput, getRGBString } from './utils/utils';\n\nexport default function App() {\n  const [bgColorStyle, setColorStyle] = useState({\n    backgroundColor: 'rgb(256,256,256)',\n  });\n  const handleSubmit = (evt) => evt.preventDefault();\n  const handleChange = (evt) => {\n    setColorStyle((prevColorStyle) => {\n      return checkInput(evt, prevColorStyle) || getRGBString(evt.target.value);\n    });\n  };\n\n  return (\n    <div className=\"App\" style={bgColorStyle}>\n      <form className=\"App-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"App-input\"\n          id=\"hex\"\n          name=\"hex\"\n          onChange={handleChange}\n        />\n        <div className=\"App-output\">\n          {bgColorStyle.backgroundColor === 'red'\n            ? 'Ошибка!'\n            : bgColorStyle.backgroundColor}\n        </div>\n      </form>\n    </div>\n  );\n}\n","const checkInput = ({ target }, prevColorStyle) => {\n  const { value } = target;\n  if (value.length < 7) {\n    return prevColorStyle;\n  }\n\n  return !value.startsWith('#') || value.length > 7\n    ? { backgroundColor: 'red' }\n    : false;\n};\n\nconst getRGBString = (value) => {\n  if (value.startsWith('#')) {\n    const rRGB = +('0x' + value.slice(1, 3)).toString();\n    const gRGB = +('0x' + value.slice(3, 5)).toString();\n    const bRGB = +('0x' + value.slice(5, 7)).toString();\n    console.log(rRGB, gRGB, bRGB);\n    const notNumber = isNaN(rRGB) || isNaN(gRGB) || isNaN(bRGB);\n    console.log('?notNumber: ', notNumber);\n\n    return (\n      (notNumber && { backgroundColor: 'red' }) || {\n        backgroundColor: `rgb(${rRGB}, ${gRGB}, ${bRGB})`,\n      }\n    );\n  }\n};\n\nexport { checkInput, getRGBString };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}